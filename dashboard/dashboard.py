# -*- coding: utf-8 -*-
"""Dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hsByxjQYlsom7RzC4lfC6D317wNyslyK
"""

!pip install pandas
!pip install numpy
!pip install matplotlib
!pip install seaborn
!pip install plotly
!pip install streamlit

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st

temp_data= pd.read_csv('temp_data.csv')
rain_data=pd.read_csv('rain_data.csv')
station=pd.read_csv('COMPILED.csv')

print(temp_data)
print(rain_data)
print(station)

station['date'] = pd.to_datetime(station[['year', 'month', 'day', 'hour']])

st.title("Analisis Kualitas Udara di China")



# Buat gambar
plt.figure(figsize=(15, 6))

# Memisahkan stasiun cuaca sehingga ditampilkan pada masing-masing gambar
unique_stations= rain_data['station'].unique()
num_stations= len(unique_stations)

# membuat warna yang random
colors = np.random.rand(num_stations, 3)  # Create an array of random RGB values

# membuat palet dan diatributkan pada setiap stasiun
palette = dict(zip(unique_stations, colors))

# membuat barplot
sns.barplot(x= 'month', y= 'RAIN', hue= 'station', data=rain_data, palette=palette)

plt.title('Total Rain per Month for Each Station in 2016')
plt.xlabel('Month')
plt.ylabel('Total Rain (mm)')
plt.legend(title='Station')
plt.xticks()
plt.show()
st.pyplot(fig)

unique_stations= rain_data['station'].unique()
num_stations= len(unique_stations)

#membuat subplot dan membagi kolom menjadi 3
num_cols= 3  # Number of columns
num_rows= (num_stations + num_cols - 1) // num_cols

fig, axes= plt.subplots(nrows=num_rows, ncols=num_cols, figsize=(15, 5 * num_rows), sharex=True)

# Flatten the axes array for easier iteration
axes = axes.flatten()

for i, station in enumerate(unique_stations):
    ax = axes[i]
    station_data_subset = rain_data[rain_data['station'] == station]

    sns.lineplot(x='month', y='RAIN', data=station_data_subset, ax=ax)

    ax.set_title(f'{station} in 2016')
    ax.set_ylabel('Total Rain (mm)')
    ax.set_ylim(0, 400)

    if i >= num_stations - num_cols:
        ax.set_xlabel('Month')

plt.tight_layout()
plt.show()
st.pyplot(fig)

# Buat gambar
plt.figure(figsize=(15, 6))

# Memisahkan stasiun cuaca sehingga ditampilkan pada masing-masing gambar
unique_stations= temp_data['station'].unique()
num_stations= len(unique_stations)

# membuat warna yang random
colors = np.random.rand(num_stations, 3)  # Create an array of random RGB values

# membuat palet dan diatributkan pada setiap stasiun
palette =dict(zip(unique_stations, colors))

# membuat barplot
sns.barplot(x='month', y='TEMP', hue='station', data=temp_data, palette=palette)

plt.title('Total Rain per Month for Each Station in 2016')
plt.xlabel('Month')
plt.ylabel('Mean Temperature (celcius)')
plt.legend(title='Station')
plt.xticks(rotation=45)  # Rotate x-axis labels for better readability
plt.show()
st.pyplot(fig)

unique_stations= temp_data['station'].unique()
num_stations= len(unique_stations)

#membuat subplot dan membagi kolom menjadi 3
num_cols = 3  # Number of columns
num_rows = (num_stations + num_cols - 1) // num_cols  # Calculate rows needed

fig, axes = plt.subplots(nrows=num_rows, ncols=num_cols, figsize=(15, 5 * num_rows), sharex=True)

# Flatten the axes array for easier iteration
axes = axes.flatten()

for i, station in enumerate(unique_stations):
    ax = axes[i]
    temp_data_subset = temp_data[temp_data['station'] == station]

    sns.lineplot(x='month', y='TEMP', data=temp_data_subset, ax=ax)

    ax.set_title(f'{station} in 2016')
    ax.set_ylabel('mean temperature')
    ax.set_ylim(-5, 30)


    if i >= num_stations - num_cols:
        ax.set_xlabel('Month')

plt.tight_layout()
plt.show()
st.pyplot(fig)